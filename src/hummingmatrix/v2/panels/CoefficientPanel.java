/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package hummingmatrix.v2.panels;

import hummingmatrix.v2.classes.ReadWriteText;
import hummingmatrix.v2.interfaces.MatrixChangeObserver;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Darko
 */
public class CoefficientPanel extends javax.swing.JPanel implements MatrixChangeObserver{

    private ReadWriteText matrixObj;
    /**
     * Creates new form CoefficientPanel
     */
    public CoefficientPanel(ReadWriteText matrix) {
        initComponents();
        this.matrixObj = matrix;
        try {
            initResults();
        } catch (IOException ex) {
            Logger.getLogger(CoefficientPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        this.matrixObj.register(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jtfCFBS = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jtfCNBS = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtaCBCF = new javax.swing.JTextArea();

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("hummingmatrix/v2/translation/Bundle"); // NOI18N
        jLabel2.setText(bundle.getString("label.cfbs.text")); // NOI18N

        jtfCFBS.setEditable(false);
        jtfCFBS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfCFBSActionPerformed(evt);
            }
        });

        jLabel1.setText(bundle.getString("label.cnbs.text")); // NOI18N

        jtfCNBS.setEditable(false);

        jLabel3.setText(bundle.getString("label.cbcf.text")); // NOI18N

        jtaCBCF.setEditable(false);
        jtaCBCF.setColumns(20);
        jtaCBCF.setRows(5);
        jScrollPane1.setViewportView(jtaCBCF);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jtfCFBS)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 319, Short.MAX_VALUE)
                    .addComponent(jtfCNBS)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtfCFBS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtfCNBS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 181, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jtfCFBSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfCFBSActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfCFBSActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jtaCBCF;
    private javax.swing.JTextField jtfCFBS;
    private javax.swing.JTextField jtfCNBS;
    // End of variables declaration//GEN-END:variables

    private void initResults() throws IOException {
        jtfCFBS.setText(this.matrixObj.koef1());
        jtfCNBS.setText(this.matrixObj.koef2());
        jtaCBCF.setText(this.matrixObj.koef3());
    }

    @Override
    public void onMatrixChange(ReadWriteText matrix) {
        this.matrixObj = matrix;
        try {
            initResults();
        } catch (IOException ex) {
            Logger.getLogger(CoefficientPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
